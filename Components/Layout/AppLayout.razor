@using GroupOrder.Services.Common
@inherits LayoutComponentBase
@inject NavigationManager nm
@inject IAdminService adminService
@inject IGroupService gs

@code {
    [CascadingParameter]
    RouteData? RouteData { get; set; }
    

    protected override async Task OnParametersSetAsync()
    {
        adminService.Initialize();
        if (RouteData?.RouteValues.ContainsKey("GroupSlug") == true)
        {
                await gs.LoadGroup((string) RouteData?.RouteValues.GetValueOrDefault("GroupSlug")!);
                StateHasChanged();
        }
        await base.OnParametersSetAsync();
        nm.LocationChanged += HandleLocationChanged;
    }
    
    async void HandleLocationChanged(object? sender, LocationChangedEventArgs? e)
    {
        if (RouteData?.RouteValues.ContainsKey("GroupSlug") != true) return; // TODO clear
        await gs.LoadGroup((string)RouteData?.RouteValues.GetValueOrDefault("GroupSlug")!);
        StateHasChanged();
    }
}

<div class="page">
    
    @if (gs.Group != null)
    {
        @if (adminService.IsAdmin())
        {
            <div class="sidebar">
                <NavMenu/>
            </div>
        }

        <main>
            <article class="content px-4">
                @Body
            </article>
        </main>
    } else if (gs.Loading)
    {
        <p>Still loading, please wait...</p>
    } else if (gs.NotFound)
    {
        <h1 style="margin: 2rem;">Could not find this group</h1>
    }
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
