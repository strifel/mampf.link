@using GroupOrder.Services.Common
@using GroupOrder.Components.Error
@inherits LayoutComponentBase
@inject NavigationManager nm
@inject IAdminService adminService
@inject IGroupService gs

@code {
    [CascadingParameter]
    RouteData? RouteData { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        adminService.Initialize();
        if (RouteData?.RouteValues.ContainsKey("GroupSlug") == true)
        {
            await gs.LoadGroup((string)RouteData?.RouteValues.GetValueOrDefault("GroupSlug")!);
            StateHasChanged();
        }
        await base.OnParametersSetAsync();
        nm.LocationChanged += HandleLocationChanged;
        adminService.CodeChanged += HandleCodeChanged;
    }

    async void HandleLocationChanged(object? sender, LocationChangedEventArgs? e)
    {
        if (RouteData?.RouteValues.ContainsKey("GroupSlug") != true) return; // TODO clear
        await gs.LoadGroup((string)RouteData?.RouteValues.GetValueOrDefault("GroupSlug")!);
        StateHasChanged();
    }
    
    async void HandleCodeChanged(object? sender, EventArgs e)
    {
        await gs.ReloadGroup();
        StateHasChanged();
    }
}

<header data-bs-theme="dark">
    <div class="navbar navbar-dark navbar-expand-lg bg-dark shadow-sm">
        <div class="container">
            <a href="#" class="navbar-brand d-flex align-items-center">
                <strong>Mampf.Link</strong>
            </a>
        @if (adminService.IsAdmin())
        {
            <NavMenu></NavMenu>
        }
        </div>
    </div>
</header>

@if (gs.Group != null)
{
    <main>
        <section class="py-5 container">
            @Body
        </section>
    </main>
}
else if (gs.Loading)
{
    <p>Still loading, please wait...</p>
}
else if (gs.NotFound)
{
    <FourZeroFourError/>
}

<Footer></Footer>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
