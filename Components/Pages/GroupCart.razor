@page "/group/{GroupSlug}/cart"

@using GroupOrder.Components.Layout
@using GroupOrder.Data
@using GroupOrder.Services.Common
@rendermode InteractiveServer

@layout AppLayout

@inject IGroupService gs
@inject IAdminService adminService

<PageTitle>Mampf.Link @gs.Group?.GroupName Cart-Helper</PageTitle>

@if (gs.Group != null && adminService.IsAdmin())
{
    <h1>Left to add to Cart: @gs.Group?.GroupName</h1>


    <table class="table">
        <thead>
        <tr>
            <th>
                Food
            </th>
            @if (gs.Group!.PaymentType != PaymentType.NO_PRICES)
            {
                <th>
                    Price
                </th>
            }
            <th>
                Mark as Added
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (Order order in gs.Group!.Orders)
        {
            @if (order.AddedToCart == true) { continue; }
            <tr>
                <td>
                    @order.Food
                </td>
                @if (gs.Group.PaymentType != PaymentType.NO_PRICES)
                {
                    <td>
                        @order.GetPrice()€
                        @if (order.PaymentStatus == PaymentStatus.Paid)
                        {
                            <span style="color: green"> (Paid)</span>
                        }
                    </td>
                }
                <td>
                    <button class="primary" @onclick="() => SetAdded(order)">Added</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <br>
    <br>
    @if (gs.Group.PaymentType != PaymentType.NO_PRICES)
    {
        <p>You should have added @Order.GetPrice(CalculateAddedSum())€ to your cart.<br>
            The total will be @Order.GetPrice(CalculateTotalSum())€.</p>
    }
    <button class="btn btn-danger" @onclick="ResetCart">Reset cart.</button>
}else
{
<h2>Go back to <a href="/group/@gs.Group?.GroupSlug">the My Order Page</a></h2>
}

@code {
    [Parameter]
    public string? GroupSlug { get; set; }

    private int CalculateTotalSum()
    {
        if (gs.Group == null) return 0;
        return gs.Group.Orders.Sum(o => o.Price) ?? 0;
    }
    
    private int CalculateAddedSum()
    {
        if (gs.Group == null) return 0;
        return gs.Group.Orders.Sum(o => o.AddedToCart ?? false ? o.Price : 0) ?? 0;
    }

    private async void SetAdded(Order order) {
        if (gs.Group == null) return;
        if (!adminService.IsAdmin()) return; // this theoretically should not happen
        order.AddedToCart = true;
        await gs.Save();
        StateHasChanged();
    }

    private async void ResetCart()
    {
        if (gs.Group == null) return;
        if (!adminService.IsAdmin()) return; // this theoretically should not happen
        foreach (Order order in gs.Group.Orders)
        {
            order.AddedToCart = false;
        }
        await gs.Save();
        StateHasChanged();
    }
    
}
